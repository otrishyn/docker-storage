
version: '3.1'

services:
  mysql-server:
    container_name: mysqlserver
    hostname: mysql-server
    image: mysql:${MYSQL_TAG:-5.5}
    network_mode: ${NETWORK:-bridge}
    volumes:
       - mysql-datadir:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-secret}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-homestead}
      MYSQL_USER: ${MYSQL_USER:-user}
      MYSQL_PASSWORD: ${MYSQL_USER_PASSWORD:-password}
    ports:
      - "${MYSQL_PORT:-3306}:3306"

  mongo-server26:
    container_name: mongodbserver26
    hostname: mongo-server
    build:
      context: ./mongo/2.6/
    network_mode: ${NETWORK:-bridge}
    volumes:
       - mongo-datadir:/data/db
    restart: always
    ports:
      - "${MONGO_PORT:-27017}:27017"
  
  elastic-server13:
    container_name: elastic-server13
    hostname: elastic-server13
    build:
      context: ./elastic/1.3/
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    network_mode: ${NETWORK:-bridge}
    volumes:
       - elastic-datadir:/data/db
    restart: always
    ports:
      - "${MONGO_PORT:-9200}:9200"
      - "${MONGO_PORT:-9300}:9300"

  redis-server:
    container_name: redis-server
    image: redis
    hostname: redis-server
    command: ["redis-server", "--appendonly", "yes"]
    network_mode: ${NETWORK:-bridge}
    ports:
        - "${REDIS_PORT:-6379}:6379"
    restart: always
    volumes:
      - redis-datadir:/data
  
volumes:
  mysql-datadir:
  mongo-datadir:
  redis-datadir:
  elastic-datadir:

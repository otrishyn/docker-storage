version: '3.2'

services:
  mysql-server:
    container_name: mysqlserver
    hostname: mysql-server
    image: mysql:${MYSQL_TAG:-5.5}
    network_mode: ${NETWORK:-bridge}
    volumes:
       - "mysql-datadir:/var/lib/mysql"
       - ${PROVISIONING_PATH:-~/Code/provisioning}:/provisioning
    restart: always
    working_dir: /provisioning
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-secret}
      MYSQL_USER: ${MYSQL_USER:-root}
      MYSQL_PASSWORD: ${MYSQL_USER_PASSWORD:-secret}
    ports:
      - ${MYSQL_PORT:-8989}:3306

  mysql57:
    container_name: mysql57
    hostname: mysql-server57
    image: mysql:${MYSQL_TAG:-5.7}
    network_mode: ${NETWORK:-bridge}
    volumes:
    - "mysql57-datadir:/var/lib/mysql"
    - ${PROVISIONING_PATH:-~/Code/provisioning}:/provisioning
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-secret}
      MYSQL_USER: ${MYSQL_USER:-root}
      MYSQL_PASSWORD: ${MYSQL_USER_PASSWORD:-secret}
    ports:
    - ${MYSQL57_PORT:-8980}:3306

  mongo-server26-1:
    container_name: mongodbserver26-1
    hostname: mongo-server-1
    build:
      context: ./mongo/2.6/
    network_mode: ${NETWORK:-bridge}
    working_dir: /provisioning
    volumes:
       - mongo-datadir:/data/db
       - ${PROVISIONING_PATH:-~/Code}:/provisioning
    restart: always
    ports:
      - ${MONGO26_PORT:-27018}:27017

  mongo-server26:
    container_name: mongodbserver26
    hostname: mongo-server
    image: mongo:latest
    network_mode: ${NETWORK:-bridge}
    working_dir: /provisioning
    volumes:
    - mongo34-datadir:/data/db
    - ${PROVISIONING_PATH:-~/Code}:/provisioning
    restart: always
    ports:
    - ${MONGO34_PORT:-27017}:27017
  
  elastic-server13:
    container_name: elastic-server13
    hostname: elastic-server13
    build:
      context: ./elastic/1.3/
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - http.cors.allow-origin=*
      - http.cors.allow-methods=OPTIONS,HEAD,GET,POST,PUT,DELETE
      - http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length
    ulimits:
      memlock:
        soft: -1
        hard: -1
    network_mode: ${NETWORK:-bridge}
    volumes:
       - elastic-datadir:/data/db
    restart: always
    ports:
      - ${ELASTIC_REST_PORT:-9200}:9200
      - ${ELASTIC_NODE_PORT:-9300}:9300
  
  elastichq:
    container_name: elastichq
    image: elastichq/elasticsearch-hq
    network_mode: ${NETWORK:-bridge}
    environment:
      - HQ_DEFAULT_URL=http://elastic-server13:9200
    ports:
      - ${ELASTICHQ_PORT:-5000}:5000
    links:
      - elastic-server13

  redis-server:
    container_name: redis-server
    image: redis
    hostname: redis-server
    command: ["redis-server", "--appendonly", "yes"]
    network_mode: ${NETWORK:-bridge}
    ports:
        - ${REDIS_PORT:-6379}:6379
    restart: always
    volumes:
      - redis-datadir:/data
  
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    network_mode: ${NETWORK:-bridge}
    environment:
      PMA_HOST: mysql-server
      MYSQL_USER: ${MYSQL_USER:-user}
      MYSQL_PASSWORD: ${MYSQL_USER_PASSWORD:-password}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-secret}
    ports:
      - ${PHPMYADMIN_PORT:-4003}:80
    links:
      - mysql-server

  mailhog:
    container_name: mailhog
    network_mode: ${NETWORK:-bridge}
    hostname: mailhog-server
    image: mailhog/mailhog
    ports:
      - "1025:1025"
      - "8025:8025"

  rabbitmq:
    image: rabbitmq:3-management
    hostname: rabbitmq
    network_mode: ${NETWORK:-bridge}
    container_name: rabbitmq
    environment:
      RABBITMQ_ERLANG_COOKIE: SWQOKODSQALRPCLNMEQG
      RABBITMQ_DEFAULT_USER: rabbitmq
      RABBITMQ_DEFAULT_PASS: secret
      RABBITMQ_DEFAULT_VHOST: /
    ports:
      - 15672:15672
      - 5672:5672
    labels:
      NAME: rabbitmq

  ch-server-1:
    image: yandex/clickhouse-server
    container_name: ch-server-1
    hostname: ch-server-1
    network_mode: ${NETWORK:-bridge}
    volumes:
      - ch-server-1-datadir:/var/lib/clickhouse
    ports:
      - ${CLICKHOUSE_PORT:-8123}:8123

volumes:
  mysql-datadir:
  mongo-datadir:
  redis-datadir:
  elastic-datadir:
  mysql57-datadir:
  ch-server-1-datadir:
  mongo34-datadir: